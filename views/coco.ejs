<!DOCTYPE html>
<!--

    欢迎大家使用COCO V 1.0

    @@@@@@@   @@@@@@@     @@@@@@@    @@@@@@@
   @         @       @   @          @       @
   @         @       @   @          @       @
   @         @       @   @          @       @
   @         @       @   @          @       @
   @         @       @   @          @       @
    @@@@@@@   @@@@@@@     @@@@@@@    @@@@@@@

-->

<html ng-app="coco">
<head>
    <title><%= title %></title>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link rel="SHORTCUT ICON" href="/images/icons/web_logo.ico">
    <link rel="BOOKMARK" href="/images/icons/web_logo.ico">
    <link rel="stylesheet" href="/bootstrap3/css/bootstrap.css"/>
    <link rel="stylesheet" href="/stylesheets/lightbox.css"/>
    <script type="text/javascript" src="/AngularJs/angular.js"></script>
    <script type="text/javascript" src="/AngularJs/angular-route.js"></script>
    <script type="text/javascript" src="/Jquery/jquery-lib-2.11.js"></script>
    <script type="text/javascript" src="/Jquery/lightbox.min.js"></script>
    <script type="text/javascript" src="/bootstrap3/js/bootstrap.js"></script>
    <script type="text/javascript" src="/Socket.io/socket.io-1.2.0.js"></script>
    <script type="text/javascript" src="/js/coco-message-client.js"></script>
    <!-- 百度地图API -->
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=h0FFkY7dVtnTqirIAAb1vbdj"></script>
    <script type="text/javascript" src="/js/coco-util.js"></script>
    <script type="text/javascript">
        var coco_app = angular.module('coco',['ngRoute']);
        coco_app.config(['$routeProvider',function($routeProvider){
            // check
            var loginUserInfo = sessionStorage.getItem('LOGIN_USER_INFO');
            if (loginUserInfo == null){
                //location.href = "/coco/login/"
            }else{
                if (!client.connected || LOGIN_STATUS == 0){
                    var userInfo = JSON.parse(loginUserInfo);
                    client.emit('LOGIN_MESSAGE_SERVER', {'user_sha1': userInfo.sha1});
                }
            }

            $routeProvider.
                    when('/chat/',{
                        templateUrl:'/coco/chat/',
                        controller:''
                    }).
                    when('/blog/:topic_sha1',{
                        templateUrl:'/coco/blog/',
                        controller:'blogPageController'
                    }).
                    when('/index/',{
                        templateUrl:'/coco/index/',
                        controller:''
                    }).
                    when('/message/',{
                        templateUrl:'/coco/message/',
                        controller:''
                    }).
                    when('/account/:user_sha1',{
                        templateUrl:'/coco/account/',
                        controller:'accountPageCtrl'
                    }).
                    otherwise({redirectTo:'/index/'});
        }]);

    </script>
    <script type="text/javascript">
        function chatPageCtrl($scope, $http) {
            $scope.chat_image = 'default.png'
            PAGE_INDEX = 2;
            var loginUserInfo = sessionStorage.getItem('LOGIN_USER_INFO');
            var userInfo = JSON.parse(loginUserInfo);
            $scope.user = userInfo;
            $scope.order = "online";
            var creator_sha1 = sessionStorage.getItem('LOGIN_USER_SHA1');
            $http.post('/ajax/get_friend_list/', {creator_sha1: creator_sha1}).success(function (data) {
                if (data['ret'] == '0001') {
                    console.log(data);
                    var friend_list = data['friend_list'];
                    // 获取前端未读信息
                    var unread_messages = localStorage.getItem("UNREAD_MESSAGE_NUM") || '{}';
                    unread_messages = JSON.parse(unread_messages);

                    friend_list.every(function(obj){
                        var nb_message = ''
                        if (unread_messages.hasOwnProperty(obj.sha1)){
                            nb_message = unread_messages[obj.sha1]
                        }
                        if (obj['head_image'] == ''){
                            obj['head_image'] = 'default.png';
                        }
                        obj['nb_message'] = nb_message;
                        return obj;
                    });

                    $scope.friend_list = friend_list;

                    var friend_info_dict = {};
                    var all_user_info_dict = {};

                    friend_list.forEach(function(obj){
                        friend_info_dict[obj.sha1] = obj;
                        all_user_info_dict[obj.sha1] = obj;
                    });

                    localStorage.setItem('FRIEND_INFO_DICT',JSON.stringify(friend_info_dict));
                    localStorage.setItem('ALL_USER_INFO_DICT',JSON.stringify(all_user_info_dict));

                }
            });
            // get user friend list

            $scope.openChat = function (obj) {
                $('#all_friend_list').slideUp();
                $('#current_chat_area').slideDown();
                var friend_name = $(obj)[0].friend.name;
                var head_image = $(obj)[0].friend.head_image;
                var friend_sha1 = $(obj)[0].friend.sha1;
                $scope.chat_name = friend_name;
                $scope.chat_image = head_image;
                $scope.fid = friend_sha1;
                var my_sha1 = sessionStorage.getItem('LOGIN_USER_SHA1');
                showChatHistory(my_sha1+'_'+friend_sha1);
                $('div[uid='+friend_sha1+']').find('.message-badge').text('');

                // 删除前端未读信息
                var unread_messages = localStorage.getItem("UNREAD_MESSAGE_NUM") || '{}';
                unread_messages = JSON.parse(unread_messages);
                delete unread_messages[friend_sha1];
                localStorage.setItem('UNREAD_MESSAGE_NUM',JSON.stringify(unread_messages));
            }

            $scope.backBtn = function () {
                $('#all_friend_list').slideDown();
                $('#current_chat_area').slideUp();
            }


        }
        function blogPageCtrl($scope) {
            var loginUserInfo = sessionStorage.getItem('LOGIN_USER_INFO');
            $scope.user = JSON.parse(loginUserInfo);

        }

        function getUserDetailInfo(usersha1){
            var user_list = localStorage.getItem('ALL_USER_INFO_DICT');
            var user_info_dict = JSON.parse(user_list);
            var user_object = {}

            if (user_info_dict.hasOwnProperty(usersha1)){
                user_object = user_info_dict[usersha1]
                if (user_object['head_image'] == ''){
                    user_object['head_image'] = 'default.png';
                }
            }else{
                user_object['head_image'] = 'default.png';
                user_object['name'] = '未知';
            }
            return user_object;

        }



        function accountPageCtrl($scope,$http,$routeParams) {
            PAGE_INDEX = 3;
            var user_sha1 = $routeParams.user_sha1;
            if (user_sha1 == 'me'){
                // 如果点击用户是当前用户
                var loginUserInfo = sessionStorage.getItem('LOGIN_USER_INFO');
                var info = JSON.parse(loginUserInfo);
                info['time'] = new Date(parseInt(info['time'])).Format('yyyy-MM-dd')
                info['mine'] = true;
                $scope.user = info;
            }else{
                $http.post('/ajax/get_user_info/', {user_sha1: user_sha1}).success(function (data) {
                    if (data['ret'] == '0001') {
                        var info = data['user_info'];
                        info['mine'] = false;
                        $scope.user = info;
                    }
                })


            }

            var date = new Date().getTime();
            var other_info = {
                location : "北京",
                date : date,
                //name : info['name'],
                ip : "192.168.1.22"
            }
            $scope.infos = other_info;



            $scope.logout = function(){
                sessionStorage.removeItem('LOGIN_USER_INFO');
                location.href ="/coco/logout/"
            }

        }

        function topicPageController($scope, $http) {
            PAGE_INDEX = 0;
            var user_info_cache = localStorage.getItem('ALL_USER_INFO_DICT')
            var creator_sha1 = sessionStorage.getItem('LOGIN_USER_SHA1');

            var loginUserInfo = sessionStorage.getItem('LOGIN_USER_INFO');
            $scope.user = JSON.parse(loginUserInfo);


            $scope.changeOrder = function(index) {
                switch (index){
                    case  0:
                        $scope.order = "time";
                        break;
                    case 1:
                        $scope.order = "related.length";
                        break;
                    case  2:
                        $scope.order = "update_time";
                        break;
                    default :
                        $scope.order = "sha1";
                        break;
                }
                $('.topic-category').find('.item-active').removeClass('item-active');
                $('.topic-category').find('.item').eq(index).addClass('item-active');
            }

            if(user_info_cache == null){
                $http.post('/ajax/get_friend_list/', {creator_sha1: creator_sha1}).success(function (data) {
                    if (data['ret'] == '0001') {
                        console.log(data);
                        var friend_list = data['friend_list'];
                        var friend_info_dict = {}
                        var all_user_info_dict = {}
                        friend_list.every(function(obj){
                            if (obj['head_image'] == ''){
                                obj['head_image'] = 'default.png';
                            }
                            friend_info_dict[obj.sha1] = obj;
                            all_user_info_dict[obj.sha1] = obj;
                            return obj;

                        })
                        $scope.friend_list = friend_list;

                        localStorage.setItem('FRIEND_INFO_LIST',JSON.stringify(friend_list));
                        localStorage.setItem('FRIEND_INFO_DICT',JSON.stringify(friend_info_dict));
                        localStorage.setItem('ALL_USER_INFO_DICT',JSON.stringify(all_user_info_dict));
                        // 显示所有的主题
                        showTopic();
                    } else {

                    }
                });

            }else{
                $scope.friend_list = JSON.parse(localStorage.getItem('FRIEND_INFO_LIST'));
                // 显示所有的主题
                showTopic(1);
            }

            $scope.changePage = function(offset){
                var page = $scope.current_page + offset;
                showTopic(page);
            }

            function showTopic(page) {
                var creator_sha1 = sessionStorage.getItem('LOGIN_USER_SHA1');
                var topic_info_cache = localStorage.getItem('TOPIC_INFO_LIST');
                $scope.prev = true;
                $scope.next = true;
                //if(topic_info_cache == null){
                    $('.topic-badge').text('');
                    $http.post('/ajax/get_topic_list/', {creator_sha1: creator_sha1,page:page}).success(function (data) {
                        if (data['ret'] == '0001') {
                            console.log(data);
                            var topic_list = data['topic_list'];
                            topic_list.every(function(obj){
                                var userSha1 = obj.creator_sha1;
                                var userObject = getUserDetailInfo(userSha1);
                                obj['name'] = userObject['name']
                                obj['head_image'] = userObject['head_image'];
                                return obj;
                            });
                            var has_next = data['has_next'];
                            if(has_next){
                                $scope.next = true
                            }else{
                                $scope.next = false
                            }
                            $scope.current_page = page;
                            var prev_list = $scope.topic_list || []
                            $scope.topic_list = prev_list.concat(topic_list);
                            $scope.nb_topic = topic_list.length;
                            var topic_info_dict = {};
                            topic_list.forEach(function(obj){
                                topic_info_dict[obj.sha1] = obj
                            })
                            localStorage.setItem('TOPIC_INFO_DICT',JSON.stringify(topic_info_dict));
                            localStorage.setItem('TOPIC_INFO_LIST',JSON.stringify(topic_list));
                        } else {

                        }
                    });
//                }else{
//                    var topic_list = JSON.parse(topic_info_cache);
//                    $scope.nb_topic = topic_list.length;
//                    $scope.topic_list = topic_list;
//                }
            }

            $scope.enterSearchTopic = function(e){
                var e = e || window.event
                if (e.keyCode == 13){
                    var keyword = $scope.query;
                    searchTopic(keyword);
                }
            }

            function searchTopic(keyword){
                var page = $scope.page || 1;
                $http.post('/ajax/search_topic/', {keyword:keyword,page:page}).success(function (data) {
                    if (data['ret'] == '0001') {
                        var topic_list = data['topic_list'];
                        topic_list.every(function(obj){
                            var userSha1 = obj.creator_sha1;
                            var userObject = getUserDetailInfo(userSha1);
                            obj['name'] = userObject['name']
                            obj['head_image'] = userObject['head_image'];
                            return obj;
                        });
                        var has_next = data['has_next'];
                        if(has_next){
                            $scope.next = true
                        }else{
                            $scope.next = false
                        }
                        if(page == 1){
                            $scope.prev = false
                        }else{
                            $scope.prev = true
                        }
                        $scope.current_page = page;
                        $scope.topic_list = topic_list;
                        $scope.nb_topic = topic_list.length;
                    }
                })
            }


            $scope.saveTopic = function () {
                var topicInfo = $scope.topic;
                var creator_sha1 = sessionStorage.getItem('LOGIN_USER_SHA1');
                topicInfo['creator_sha1'] = creator_sha1
                $http.post('/ajax/save_topic/', topicInfo).success(function (data) {
                    if (data['ret'] == '0001') {
                        $scope.topic.title = '';
                        $scope.topic.desc = '';
                        $('.compose_topic_modal').modal('hide');
                        // 发送消息通知
                        sendTopicMessage('add_topic',data['topic'][0].sha1);
                        data['topic'].every(function(obj){
                            var userSha1 = obj.creator_sha1;
                            var userObject = getUserDetailInfo(userSha1);
                            obj['name'] = userObject['name']
                            obj['head_image'] = userObject['head_image']
                           return obj;
                        });

                        // 利用angular刷新
                        var topic_list = data['topic'].concat($scope.topic_list);
                        $scope.nb_topic = topic_list.length;
                        var topic_info_dict = {};
                        topic_list.every(function(obj){
                            topic_info_dict[obj.sha1] = obj;
                            if (obj.hasOwnProperty('$$hashKey')){
                                delete  obj['$$hashKey'];
                            }
                            return obj;
                        })

                        $scope.topic_list = topic_list;
                        localStorage.setItem('TOPIC_INFO_DICT',JSON.stringify(topic_info_dict));
                        localStorage.setItem('TOPIC_INFO_LIST',JSON.stringify(topic_list));

                        // 更新用户博客的数量
                        var loginUserInfo = sessionStorage.getItem('LOGIN_USER_INFO');
                        var user_obj = JSON.parse(loginUserInfo);
                        user_obj.nb_topic = user_obj.nb_topic+1;
                        sessionStorage.setItem('LOGIN_USER_INFO',JSON.stringify(user_obj));
                        $scope.user = user_obj;

                    } else {

                    }
                });
            }

        }

        function getTopicObjectInfo(topic_sha1){

            var topic_list = localStorage.getItem('TOPIC_INFO_DICT');
            var topic_info_dict = JSON.parse(topic_list);
            var topic_object = {}

            if (topic_info_dict.hasOwnProperty(topic_sha1)){
                topic_object = topic_info_dict[topic_sha1]
            }else{
                topic_object['title'] = '全部';
                topic_object['desc'] = '未知';
            }
            return topic_object;
        }

        function blogPageController($scope, $http, $routeParams) {
            PAGE_INDEX = 1;
            $scope.index_collapse = true
            // 博客相关图片的上传
            // 文件上传
            $('#blog_fileupload').fileupload({
                url:'/ajax/upload/',
                sequentialUploads: true,
                dataType: 'json',
                done: function (e, data) {
                    var image_url = "/images/"+data.result['sha1'];
                    var file =  data['result'];
                    var file_size =  (file['size']/1024).toFixed(1) + 'KB'
                    $('#blog_files_area').append('<p class="file-item" style="margin: 2px;font-size: 13px;padding: 5px"><span style="display: inline-block;max-width: 60%;overflow: hidden;text-overflow: ellipsis">'+file["name"]+'</span><a style="cursor: pointer;float: right" onclick="deleteFile(this)" file_sha1="'+file['sha1']+'" style="float: right" >删除</a><span style="float: right;padding: 0px 10px">'+file_size+'</span></p>');
                    file_list.push(file)
                }
            })


            // 删除已经上传的文件
            $scope.deleteFile = function (obj){
                var delete_confirm = window.confirm("删除文件？")
                if (delete_confirm){
                    var file_sha1 = $(obj).attr('file_sha1')
                    var usersha1 = sessionStorage.getItem('LOGIN_USER_SHA1');
                    $(obj).parent('.file-item').remove()
                    for(var i=0;i<file_list.length;i++){
                        if (file_list[i].sha1 == file_sha1){
                            file_list.remove(i)
                        }
                    }
                    $.post('/ajax/delete_file/',{file_sha1:file_sha1,usersha1:usersha1},function(data){
                        console.log(data)

                    });
                }
            }

            var user_info_cache = localStorage.getItem('ALL_USER_INFO_DICT')
            var creator_sha1 = sessionStorage.getItem('LOGIN_USER_SHA1');

            var loginUserInfo = sessionStorage.getItem('LOGIN_USER_INFO');
            $scope.user = JSON.parse(loginUserInfo);

            // 博客主题的信息
            var topic_sha1 = $routeParams.topic_sha1;

            // 显示博客列表
            $scope.blog_list = [];
            $scope.prev = true;
            $scope.next = true;
            $scope.comment_blog_sha1 = "";
            $scope.comment_parent_sha1 = "";

            // 显示主题的信息
            var topic_object = getTopicObjectInfo(topic_sha1);

            $scope.topic = topic_object;


            if(user_info_cache == null){
                $http.post('/ajax/get_friend_list/', {creator_sha1: creator_sha1}).success(function (data) {
                    if (data['ret'] == '0001') {
                        console.log(data);
                        var friend_list = data['friend_list'];
                        var friend_info_dict = {}
                        var all_user_info_dict = {}
                        friend_list.every(function(obj){
                            if (obj['head_image'] == ''){
                                obj['head_image'] = 'default.png';
                            }
                            friend_info_dict[obj.sha1] = obj;
                            all_user_info_dict[obj.sha1] = obj;
                            return obj;

                        })
                        $scope.friend_list = friend_list;

                        localStorage.setItem('FRIEND_INFO_LIST',JSON.stringify(friend_list));
                        localStorage.setItem('FRIEND_INFO_DICT',JSON.stringify(friend_info_dict));
                        localStorage.setItem('ALL_USER_INFO_DICT',JSON.stringify(all_user_info_dict));
                        // 显示所有的主题
                        showBlog(1);
                    } else {

                    }
                });

            }else{
                $scope.friend_list = JSON.parse(localStorage.getItem('FRIEND_INFO_LIST'));
                // 显示所有的主题
                showBlog(1);
            }

            $scope.saveBlog = function () {
                var title = $scope.blog.title;
                var content = $scope.blog.content;
                var creator_sha1 = sessionStorage.getItem('LOGIN_USER_SHA1');
                var file_sha1_list = []
                file_list.forEach(function(obj){
                    file_sha1_list.push(obj.sha1)
                })
                //var file_list = $scope.file_list
                $http.post('/ajax/save_blog/', {
                    title: title,
                    content: content,
                    creator_sha1: creator_sha1,
                    topic_sha1:topic_sha1,
                    file_list : file_sha1_list
                }).success(function (data) {
                    if (data['ret'] == '0001') {
                        console.log(data);
                        $('#blog_files_area').empty()
                        file_list = []
                        $('.compose_blog_modal').modal('hide');
                        // 发送博客更细通知
                        sendBlogMessage('add_blog',data['blog'][0].sha1);
                        $scope.blog.title = ''
                        $scope.blog.content = ''
                        data['blog'].forEach(function (obj) {
                            var format_data = new Date(parseInt(obj['time']))
                            obj['time'] = format_data.Format('yyyy/MM/dd hh:mm')
                            console.log(obj['time'])
                        });
                        var blog_list = data['blog'].concat($scope.blog_list);
                        blog_list.every(function(obj){
                            var user_sha1 = obj.creator_sha1;
                            var userObj = getUserDetailInfo(user_sha1);
                            obj['name'] = userObj.name;
                            obj['head_image'] = userObj.head_image;
                            return obj;
                        });

                        // 利用angular刷新
                        $scope.blog_list = blog_list;

                        // 更新用户博客的数量
                        var loginUserInfo = sessionStorage.getItem('LOGIN_USER_INFO');
                        var user_obj = JSON.parse(loginUserInfo);
                        user_obj.nb_blog = user_obj.nb_blog+1;
                        sessionStorage.setItem('LOGIN_USER_INFO',JSON.stringify(user_obj));
                        $scope.user = user_obj;

                    } else {

                    }
                });
            }

            $scope.showCommentModal = function(blog_obj){
                $scope.comment_blog_sha1 = blog_obj.blog.sha1;
                $scope.comment_parent_sha1 = "";
                $('.comment_modal').modal('show');
            }

            $scope.saveComment = function (comment_obj) {
                var content = $scope.comment.content;
                var creator_sha1 = sessionStorage.getItem('LOGIN_USER_SHA1');
                var file_sha1_list = [];
                comment_file_list.forEach(function(obj){
                    file_sha1_list.push(obj.sha1)
                })
                var parent_sha1 = $scope.comment_parent_sha1;
                var blog_sha1 = $scope.comment_blog_sha1;
                $http.post('/ajax/save_comment/', {
                    content: content,
                    creator_sha1: creator_sha1,
                    parent_sha1:parent_sha1,
                    blog_sha1:blog_sha1,
                    file_list : file_sha1_list
                }).success(function (data) {
                    if (data['ret'] == '0001') {
                        console.log(data);
                        //$('#blog_files_area').empty()
                        comment_file_list = []
                        $('.comment_modal').modal('hide');
                        showBlog(1);
// 发送博客更细通知
//                        sendBlogMessage('add_blog',data['blog'][0].sha1);

//                        var blog_list = data['blog'].concat($scope.blog_list);
//                        blog_list.every(function(obj){
//                            var user_sha1 = obj.creator_sha1;
//                            var userObj = getUserDetailInfo(user_sha1);
//                            obj['name'] = userObj.name;
//                            obj['head_image'] = userObj.head_image;
//                            return obj;
//                        });
//
//                        // 利用angular刷新
//                        $scope.blog_list = blog_list;
//
//                        // 更新用户博客的数量
//                        var loginUserInfo = sessionStorage.getItem('LOGIN_USER_INFO');
//                        var user_obj = JSON.parse(loginUserInfo);
//                        user_obj.nb_blog = user_obj.nb_blog+1;
//                        sessionStorage.setItem('LOGIN_USER_INFO',JSON.stringify(user_obj));
//                        $scope.user = user_obj;

                    } else {

                    }
                });
            }

            $scope.changePage = function(offset){
                var page = $scope.current_page + offset;
                showBlog(page);
            }

            $scope.enterSearchBlog = function(e){
                var e = e || window.event
                if (e.keyCode == 13){
                    var keyword = $scope.query;
                    $scope.current_page = 1;
                    searchBlog(keyword);
                }
            }

            function searchBlog(keyword){
                var page = $scope.current_page || 1;
                $http.post('/ajax/search_blog/', {keyword:keyword,page:page}).success(function (data) {
                    if (data['ret'] == '0001') {
                        var blog_list = data['blog_list'];
                        var has_next = data['has_next'];
                        if(has_next){
                            $scope.next = true
                        }else{
                            $scope.next = false
                        }
                        if(page == 1){
                            $scope.prev = false
                        }else{
                            $scope.prev = true
                        }
                        blog_list.every(function(obj){
                            var user_sha1 = obj.creator_sha1;
                            var userObj = getUserDetailInfo(user_sha1);
                            obj['name'] = userObj.name;
                            obj['head_image'] = userObj.head_image;
                            var comment_list = obj['comment_list'] || [];
                            comment_list.every(function(comment_obj){
                                var commentUserSha1 = comment_obj.creator_sha1;
                                var commentUObject = getUserDetailInfo(commentUserSha1);
                                comment_obj['name'] = commentUObject['name']
                                comment_obj['head_image'] = commentUObject['head_image'];
                                return comment_obj;
                            })
                            return obj;
                        });

                        $scope.blog_list = blog_list;
                        $scope.current_page = page
                    }
                })
            }


            function showBlog(page) {
                if(page<1){
                    return;
                }
                $('.blog-badge').text('');
                // get blog from server
                var creator_sha1 = sessionStorage.getItem('LOGIN_USER_SHA1');
                $http.post('/ajax/get_blog_list/', {creator_sha1: creator_sha1,page:page,topic_sha1:topic_sha1}).success(function (data) {
                    if (data['ret'] == '0001') {
                        console.log(data);
                        var blog_list = data['blog_list'];
                        var has_next = data['has_next'];
                        if(has_next){
                            $scope.next = true
                        }else{
                            $scope.next = false
                        }
                        if(page == 1){
                            $scope.prev = false
                        }else{
                            $scope.prev = true
                        }
                        blog_list.every(function(obj){
                            var user_sha1 = obj.creator_sha1;
                            var userObj = getUserDetailInfo(user_sha1);
                            obj['name'] = userObj.name;
                            obj['head_image'] = userObj.head_image;
                            var comment_list = obj['comment_list'] || [];
                            comment_list.every(function(comment_obj){
                                var commentUserSha1 = comment_obj.creator_sha1;
                                var commentUObject = getUserDetailInfo(commentUserSha1);
                                comment_obj['name'] = commentUObject['name']
                                comment_obj['head_image'] = commentUObject['head_image'];
                                return comment_obj;
                            })
                            return obj;
                        });

                        if(blog_list.length == 0){
                            $scope.data_empty = true;
                        }
                        var prev_list = $scope.blog_list || [];
                        $scope.blog_list = prev_list.concat(blog_list);
                        $scope.current_page = page
                    } else {

                    }
                });
            }
        }


    </script>
    <script type="text/javascript" src="/Jquery/jquery.ui.widget.js"></script>
    <script type="text/javascript" src="/Jquery/jquery.iframe-transport.js"></script>
    <script type="text/javascript" src="/Jquery/jquery.fileupload.js"></script>
    <script type="text/javascript">
        var file_list = [];
        var comment_file_list = [];
        $(function () {
            // 文件上传
            $('#fileupload').fileupload({
                url:'/ajax/upload/',
                sequentialUploads: true,
                dataType: 'json',
                done: function (e, data) {
                    var image_url = "/images/"+data.result['sha1'];
                    $('.show_image_view').html('<img style="max-width:220px;max-height:220px;" src='+image_url+'>');
                    $('.upload-title').text('重新选择');
                    $('#fileupload').attr("imagesha1",data.result['sha1']);
                }
            });
        });
        // 保存图像
        function saveImage(){
            var imagesha1 = $('#fileupload').attr("imagesha1");
            var usersha1 = sessionStorage.getItem('LOGIN_USER_SHA1');
            $.post('/ajax/set_image/',{imagesha1:imagesha1,usersha1:usersha1},function(data){
                console.log(data)
                var loginUserInfo = sessionStorage.getItem('LOGIN_USER_INFO');
                // 更新前端的缓存
                var info = JSON.parse(loginUserInfo);
                info['head_image'] = imagesha1;
                sessionStorage.setItem('LOGIN_USER_INFO',JSON.stringify(info));
                // 更改前端的显示
                $('#user_head_image').attr('src','/images/'+imagesha1);
                $('.upload_image_modal').modal('hide');

            });
        }

        function deleteFile(obj){
            var delete_confirm = window.confirm("删除文件？")
            if (delete_confirm){
                var file_sha1 = $(obj).attr('file_sha1')
                var usersha1 = sessionStorage.getItem('LOGIN_USER_SHA1');
                $(obj).parent('.file-item').remove()
                for(var i=0;i<file_list.length;i++){
                    if (file_list[i].sha1 == file_sha1){
                        // 删除前端存储的文件信息
                        file_list.splice(i,1)
                    }
                }
                $.post('/ajax/delete_file/',{file_sha1:file_sha1,usersha1:usersha1},function(data){
                    console.log(data)

                });
            }
        }



    </script>
    <style type="text/css">
        body{
            background-color: #f5f5f5;
        }
        .device-item{
            width: 60px;
            height: 60px;
            border-radius:100% ;
            background-color: #b2ebf2;
            line-height: 60px;
            text-align: center;
            cursor: pointer;
            margin: auto;
        }
        .device-item:hover{
            background-color: #00bcd4;
        }
        .device-card{
            margin: 5px;
            background-color: #f5f5f5;
            box-shadow: 1px 1px 1px #ddd;
            height: 200px;
        }
        .footer-link a{
            padding: 0px 10px;
            font-size: 13px;
        }
        .footer-coryright{
            font-size: 13px;
            color: rgba(0,0,0,0.36);
        }
        .nav-kit .item{
            text-align: center;
            margin-top: 8px;
            padding: 0px;
        }
        .nav-kit .item a{
            color: rgba(255,255,255,0.87);
            text-align: center;
        }
        .btn a{
            display: inline-block;
            width: 100%;
            text-decoration: none;
        }
        .main-container{
            background-color: #fff;
            border-radius: 3px;
        }
    </style>

</head>
<body>
<div class="container-fluid main-container">
    <div class="navbar-header">
        <button class="navbar-toggle collapsed" type="button" data-toggle="collapse" data-target=".bs-example-js-navbar-collapse">
            <span class="sr-only"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" style="color: rgba(3, 169, 244, 1);padding: 10px 30px" href="#"><img style="width: 30px;height: 30px;display: inline-block" src="/images/icons/logo_bg.png" alt=""><span style="padding: 6px 10px;float: right">COCO</span></a>
    </div>
    <div class="collapse navbar-collapse bs-example-js-navbar-collapse">
        <ul class="nav navbar-nav">
            <li class="dropdown">
                <a id="drop1" style="cursor: pointer" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                    分类
                    <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" aria-labelledby="drop1">
                    <li><a href="#index">数码科技</a></li>
                    <li><a href="#">编程技术</a></li>
                    <li><a href="#">创业</a></li>
                    <li role="separator" class="divider"></li>
                    <li><a href="#">我的分类</a></li>
                </ul>
            </li>
            <li class="dropdown">
                <a id="drop2" style="cursor: pointer" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                    社区
                    <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" aria-labelledby="drop2">
                    <li><a href="#blog/0">博客</a></li>
                    <li><a href="#chat">达人</a></li>
                    <li><a href="#message">消息</a></li>
                    <li role="separator" class="divider"></li>
                    <li><a href="#blog/me">我的博客</a></li>
                </ul>
            </li>

        </ul>
        <form class="navbar-form navbar-left" role="search">
            <div class="form-group">
                <input style="border-radius: 20px;width: 260px" type="text" class="form-control" placeholder="搜索">
            </div>
        </form>

        <ul class="nav navbar-nav navbar-right">
            <li id="fat-menu" class="dropdown">
                <a id="drop3" style="cursor: pointer" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                    账号
                    <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" aria-labelledby="drop3">
                    <li><a href="#">我的账号</a></li>
                    <li><a href="#">安全设置</a></li>
                    <li role="separator" class="divider"></li>
                    <li><a href="#account/me">我的主页</a></li>
                </ul>
            </li>
            <li id="fat-menu" class="dropdown">
                <a href="">登录</a>
            </li>
        </ul>
    </div><!-- /.nav-collapse -->
</div>
<!--<div style="width: 100%;background-color: rgba(3, 169, 244, 0.8);position: fixed;z-index: 10">-->
    <!--<div class="container" style="padding: 8px 0px;">-->
        <!--<div class="row nav-kit">-->
            <!--<div class="col-xs-3">-->
                <!--<img style="width: 32px;height: 32px;" src="/images/icons/logo_white.png" alt=""/>-->
                <!--<div class="dropdown">-->
                    <!--<button id="dLabel" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">-->
                        <!--Dropdown trigger-->
                        <!--<span class="caret"></span>-->
                    <!--</button>-->
                    <!--<ul class="dropdown-menu" aria-labelledby="dLabel">-->
                        <!--<li>-->

                        <!--</li>-->
                    <!--</ul>-->
                <!--</div>-->
            <!--</div>-->
            <!--<div class=""></div>-->

            <!--<div class="hidden-xs hidden-sm col-xs-5 col-sm-5 col-md-5 col-lg-5"><span style="font-size: 24px;color: rgba(255,255,255,0.87);float: left">COCO</span><span id="user_location" style="margin-left:10px;font-size: 14px;color: #fff;line-height: 35px;"></span></div>-->
            <!--<div class="col-xs-3 col-sm-3 col-md-2 col-lg-2" style="text-align: center;">-->
                <!--<img style="width: 32px;height: 32px;" src="/images/icons/logo_white.png" alt=""/>-->
                <!--&lt;!&ndash;<span class="hidden-md hidden-lg" style="position: fixed;top: 50px;left: 10px;font-size: 14px;" id="user_location_mobile"></span>&ndash;&gt;-->
            <!--</div>-->
            <!--<div  class="item col-xs-2 col-sm-2 col-md-offset-1 col-md-1 col-lg-offset-1 col-lg-1"><a href="#index">主题 <span class="badge topic-badge"></span></a></div>-->
            <!--<div class="item col-xs-2 col-sm-2 col-md-1"><a href="#blog/0">博客 <span class="badge blog-badge"></span></a></div>-->
            <!--<div class="item col-xs-2 col-sm-2 col-md-1"><a href="#chat">好友 <span class="badge friend-badge"></span></a></div>-->
            <!--<div class="item col-xs-2 col-sm-2 col-md-1"><a href="#account/me">帐号 <span class="badge"></span></a></div>-->
        <!--</div>-->
    <!--</div>-->
<!--</div>-->

<div class="" ng-view style="padding-top: 40px;padding-bottom:40px;background-color: rgba(3, 169, 244, 0.8);">

</div>
<div class="container-fluid" >
    <div class="row" style="margin-top: 20px;">
        <div class="col-xs-12">
            <div style="padding: 3px;text-align: center;">
                <p class="footer-link">
                    <a href="/developer/">开发文档</a>
                    <a href="#">联系我们</a>
                    <a href="#">在线客服</a>
                    <a href="#">销售联盟</a>
                </p>
                <p class="footer-coryright">网络文化经营许可证京网文[2011]0168-061号  Copyright © 2004-2014</p>
            </div>
        </div>
    </div>
</div>


<div class="modal fade upload_image_modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">换头像</h4>
            </div>
            <div class="modal-body" style="height: 300px;">
                <div class="show_image_view" style="text-align: center;padding: 0px 0px 20px 0px"></div>
                <div class="upload-btn" style="height: 40px;width: 80%;margin:0px 10%;text-align: center;position: relative;font-size: 16px;line-height: 40px;">
                    <span class="upload-title">选择照片</span>
                    <input id="fileupload" type="file" style="width: 100%;height: 100%;opacity: 0;position: absolute;top: 0px;" multiple>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">取消</button>
                <button type="button" id="save_image" onclick="saveImage()" class="btn btn-success btn-sm">确定</button>
            </div>
        </div>
    </div>
</div>


</body>
</html>
